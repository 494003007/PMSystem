/**
 * Copyright &copy; 2012-2016 <a href="https://github.com/thinkgem/jeesite">JeeSite</a> All rights reserved.
 */
package com.thinkgem.jeesite.modules.fin.web;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.thinkgem.jeesite.common.config.Global;
import com.thinkgem.jeesite.common.persistence.Page;
import com.thinkgem.jeesite.common.web.BaseController;
import com.thinkgem.jeesite.common.utils.StringUtils;
import com.thinkgem.jeesite.modules.fin.entity.AccumulationFund;
import com.thinkgem.jeesite.modules.fin.service.AccumulationFundService;

/**
 * accumulation_fundController
 * @author czy
 * @version 2016-10-13
 */
@Controller
@RequestMapping(value = "${adminPath}/fin/accumulationFund")
public class AccumulationFundController extends BaseController {

	@Autowired
	private AccumulationFundService accumulationFundService;
	
	@ModelAttribute
	public AccumulationFund get(@RequestParam(required=false) String id) {
		AccumulationFund entity = null;
		if (StringUtils.isNotBlank(id)){
			entity = accumulationFundService.get(id);
		}
		if (entity == null){
			entity = new AccumulationFund();
		}
		return entity;
	}
	
	@RequiresPermissions("fin:accumulationFund:view")
	@RequestMapping(value = {"list", ""})
	public String list(AccumulationFund accumulationFund, HttpServletRequest request, HttpServletResponse response, Model model) {
		Page<AccumulationFund> page = accumulationFundService.findPage(new Page<AccumulationFund>(request, response), accumulationFund); 
		model.addAttribute("page", page);
		return "modules/fin/accumulationFundList";
	}

	@RequiresPermissions("fin:accumulationFund:view")
	@RequestMapping(value = "form")
	public String form(AccumulationFund accumulationFund, Model model) {
		model.addAttribute("accumulationFund", accumulationFund);
		return "modules/fin/accumulationFundForm";
	}

	@RequiresPermissions("fin:accumulationFund:edit")
	@RequestMapping(value = "save")
	public String save(AccumulationFund accumulationFund, Model model, RedirectAttributes redirectAttributes) {
		if (!beanValidator(model, accumulationFund)){
			return form(accumulationFund, model);
		}
		accumulationFundService.save(accumulationFund);
		addMessage(redirectAttributes, "保存accumulation_fund成功");
		return "redirect:"+Global.getAdminPath()+"/fin/accumulationFund/?repage";
	}
	
	@RequiresPermissions("fin:accumulationFund:edit")
	@RequestMapping(value = "delete")
	public String delete(AccumulationFund accumulationFund, RedirectAttributes redirectAttributes) {
		accumulationFundService.delete(accumulationFund);
		addMessage(redirectAttributes, "删除accumulation_fund成功");
		return "redirect:"+Global.getAdminPath()+"/fin/accumulationFund/?repage";
	}

}